# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!
app: myapp
org: niklasnilsson87
service: serverlesstest

provider:
  name: aws
  runtime: nodejs12.x
  # resourcePolicy:
  #   - Effect: Allow
  #     Principal: "*"
  #     Action: execute-api:Invoke
  #     Resource:
  #       - arn:aws:execute-api:us-east-1:945913188659:matb6gryz8/dev/POST/webhook
  #     Condition:
  #       IpAddress:
  #         aws:SourceIp:
  #           - "192.30.252.0/22"

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: Allow
      Action:
          - dynamodb:*
      Resource: '*'

# you can define service wide environment variables here
  environment:
    CLIENT_ID: ${ssm:/user/login/client-id~true}
    CLIENT_SECRET: ${ssm:/user/login/client-secret~true}
    WEBSOCKET_TABLE_NAME: ${ssm:/user/login/userTable~true}
    USER_TABLE_NAME: ${ssm:/user/login/settingsTable~true}
    SECRET_SIGNATURE: ${ssm:/user/login/secret-signature~true}

functions:
  token:
    handler: functions/authentication.handler
    events:
      - http:
          path: /user/signin/callback
          method: get
  user:
    handler: functions/user.handler
    events:
      - http:
          path: /user
          method: post
          cors: true
  saveUrl:
    handler: functions/saveUrl.handler
    events:
      - http:
          path: /saveUrl
          method: post
          cors: true
  registerWebhook:
    handler: functions/registerWebhook.handler
    events:
      - http:
          path: /registerWebhook
          method: post
          cors: true
  deleteNotifications:
    handler: functions/deleteNotifications.handler
    events:
      - http:
          path: /deleteNotifications
          method: delete
          cors: true
  webhook:
    handler: functions/webhook.handler
    events:
      - http:
          path: /webhook
          method: post
  updateSettings:
    handler: functions/updateSettings.handler
    events:
      - http:
          path: /update
          method: post
          cors: true
  websocket-connect:
    handler: websockets/connect.handler
    events:
      - websocket:
          route: $connect
  websocket-disconnect:
    handler: websockets/disconnect.handler
    events:
      - websocket:
          route: $disconnect
  websocket-default:
    handler: websockets/default.handler
    events:
      - websocket:
          route: $default

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: usersTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: N
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: name
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
    WebsocketUserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${ssm:/user/login/userTable~true}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
        - AttributeName: id
          KeyType: HASH
        BillingMode: PAY_PER_REQUEST
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"


plugins:
  - serverless-finch
  - serverless-domain-manager

custom:
  client:
    bucketName: github.niklasdeveloper.nu
    distributionFolder: ../client/build
    indexDocument: index.html
    errorDocument: index.html
  customDomain:
    domainName: github-server.niklasdeveloper.nu
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true

